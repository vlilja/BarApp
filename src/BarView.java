/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Baari;

import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class BarView extends javax.swing.JFrame {

    /**
     * Creates new form BarView
     */
    Controller controller;
    DefaultListModel drinksListModel = new DefaultListModel();
    DefaultListModel ingredientsListModel  = new DefaultListModel();
    DefaultListModel drinkRecipeListModel = new DefaultListModel();
    DefaultListModel pickedIngredientsListModel = new DefaultListModel();
    
    public BarView() {
        initComponents();
        alustaView();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        BarTabs = new javax.swing.JTabbedPane();
        DrinksPanel = new javax.swing.JPanel();
        DrinksListLabel = new javax.swing.JLabel();
        DrinksListScrollPane = new javax.swing.JScrollPane();
        DrinksList = new javax.swing.JList(drinksListModel);
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        DeleteDrinkButton = new javax.swing.JButton();
        CreateDrinkPanel = new javax.swing.JPanel();
        NewDrinkNameLabel = new javax.swing.JLabel();
        NewDrinkNameInput = new javax.swing.JTextField();
        NewDrinkPriceLabel = new javax.swing.JLabel();
        NewDrinkPriceInput = new javax.swing.JTextField();
        AvailableIngredientListLabel = new javax.swing.JLabel();
        AvaibleIngredientsListScrollPane = new javax.swing.JScrollPane();
        AvailableIngredientsList = new javax.swing.JList();
        CreateNewDrinkButton = new javax.swing.JButton();
        PickedIngredientsScrollPane = new javax.swing.JScrollPane();
        PickedIngredientsList = new javax.swing.JList();
        PickedIngredientsLabel = new javax.swing.JLabel();
        AddToDrinkButton = new javax.swing.JButton();
        PartsSlider = new javax.swing.JSlider();
        PartsSliderLabel = new javax.swing.JLabel();
        CreateIngredientPanel = new javax.swing.JPanel();
        IngredientsListLabel = new javax.swing.JLabel();
        IngredientsListScrollPane = new javax.swing.JScrollPane();
        IngredientsList = new javax.swing.JList();
        NewIngredientNameLabel = new javax.swing.JLabel();
        NewIngredientNameInput = new javax.swing.JTextField();
        AddNewIngredientButton = new javax.swing.JButton();
        DeleteIngredientButton = new javax.swing.JButton();
        EditIngredient = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bar");

        BarTabs.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BarTabsStateChanged(evt);
            }
        });

        DrinksPanel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DrinksPanelFocusGained(evt);
            }
        });

        DrinksListLabel.setText("DrinksList");

        DrinksList.setModel(drinksListModel);
        DrinksList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DrinksListMouseClicked(evt);
            }
        });
        DrinksListScrollPane.setViewportView(DrinksList);

        jList1.setModel(drinkRecipeListModel);
        jScrollPane1.setViewportView(jList1);

        jLabel1.setText("Show recipe");

        DeleteDrinkButton.setText("Delete Drink");
        DeleteDrinkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteDrinkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DrinksPanelLayout = new javax.swing.GroupLayout(DrinksPanel);
        DrinksPanel.setLayout(DrinksPanelLayout);
        DrinksPanelLayout.setHorizontalGroup(
            DrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DrinksPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(DrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(DrinksPanelLayout.createSequentialGroup()
                        .addGroup(DrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DrinksListLabel)
                            .addComponent(DrinksListScrollPane)
                            .addComponent(jScrollPane1))
                        .addGap(56, 56, 56)
                        .addComponent(DeleteDrinkButton)))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        DrinksPanelLayout.setVerticalGroup(
            DrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DrinksPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(DrinksListLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DrinksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DrinksListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteDrinkButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        BarTabs.addTab("DrinksList", DrinksPanel);

        CreateDrinkPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CreateDrinkPanelMouseClicked(evt);
            }
        });

        NewDrinkNameLabel.setText("New Drink Name");

        NewDrinkNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewDrinkNameInputActionPerformed(evt);
            }
        });

        NewDrinkPriceLabel.setText("New Drink Price");

        NewDrinkPriceInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewDrinkPriceInputActionPerformed(evt);
            }
        });

        AvailableIngredientListLabel.setText("Available Ingredients");

        AvailableIngredientsList.setModel(ingredientsListModel);
        AvaibleIngredientsListScrollPane.setViewportView(AvailableIngredientsList);

        CreateNewDrinkButton.setText("CreateNewDrink");
        CreateNewDrinkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateNewDrinkButtonActionPerformed(evt);
            }
        });

        PickedIngredientsList.setModel(pickedIngredientsListModel);
        PickedIngredientsScrollPane.setViewportView(PickedIngredientsList);

        PickedIngredientsLabel.setText("Picked Ingredients");

        AddToDrinkButton.setText("AddToDrink");
        AddToDrinkButton.setToolTipText("");
        AddToDrinkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddToDrinkButtonActionPerformed(evt);
            }
        });

        PartsSlider.setMajorTickSpacing(1);
        PartsSlider.setMaximum(10);
        PartsSlider.setMinimum(1);
        PartsSlider.setPaintLabels(true);
        PartsSlider.setPaintTicks(true);
        PartsSlider.setToolTipText("Parts");
        PartsSlider.setValue(5);

        PartsSliderLabel.setText("Parts");

        javax.swing.GroupLayout CreateDrinkPanelLayout = new javax.swing.GroupLayout(CreateDrinkPanel);
        CreateDrinkPanel.setLayout(CreateDrinkPanelLayout);
        CreateDrinkPanelLayout.setHorizontalGroup(
            CreateDrinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateDrinkPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CreateDrinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreateDrinkPanelLayout.createSequentialGroup()
                        .addGroup(CreateDrinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CreateDrinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(NewDrinkNameLabel)
                                .addComponent(NewDrinkNameInput, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                .addComponent(NewDrinkPriceLabel)
                                .addComponent(NewDrinkPriceInput))
                            .addComponent(PickedIngredientsLabel)
                            .addComponent(PickedIngredientsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(CreateDrinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CreateDrinkPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                                .addGroup(CreateDrinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AvailableIngredientListLabel)
                                    .addComponent(AvaibleIngredientsListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddToDrinkButton)
                                    .addComponent(PartsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30))
                            .addGroup(CreateDrinkPanelLayout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(PartsSliderLabel)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(CreateDrinkPanelLayout.createSequentialGroup()
                        .addComponent(CreateNewDrinkButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        CreateDrinkPanelLayout.setVerticalGroup(
            CreateDrinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateDrinkPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(CreateDrinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewDrinkNameLabel)
                    .addComponent(AvailableIngredientListLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CreateDrinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreateDrinkPanelLayout.createSequentialGroup()
                        .addComponent(NewDrinkNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NewDrinkPriceLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NewDrinkPriceInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PickedIngredientsLabel)
                        .addGap(9, 9, 9)
                        .addComponent(PickedIngredientsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CreateDrinkPanelLayout.createSequentialGroup()
                        .addComponent(AvaibleIngredientsListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(PartsSliderLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PartsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AddToDrinkButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CreateNewDrinkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        BarTabs.addTab("CreateNewDrink", CreateDrinkPanel);

        CreateIngredientPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CreateIngredientPanelMouseClicked(evt);
            }
        });

        IngredientsListLabel.setText("List of Ingredients");

        IngredientsList.setModel(ingredientsListModel);
        IngredientsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IngredientsListMouseClicked(evt);
            }
        });
        IngredientsListScrollPane.setViewportView(IngredientsList);

        NewIngredientNameLabel.setText("New Ingredient Name");

        AddNewIngredientButton.setText("AddNewIngredient");
        AddNewIngredientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddNewIngredientButtonActionPerformed(evt);
            }
        });

        DeleteIngredientButton.setText("Delete Ingredient");
        DeleteIngredientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteIngredientButtonActionPerformed(evt);
            }
        });

        EditIngredient.setText("EditIngredientButton");
        EditIngredient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditIngredientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CreateIngredientPanelLayout = new javax.swing.GroupLayout(CreateIngredientPanel);
        CreateIngredientPanel.setLayout(CreateIngredientPanelLayout);
        CreateIngredientPanelLayout.setHorizontalGroup(
            CreateIngredientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateIngredientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CreateIngredientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreateIngredientPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(DeleteIngredientButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(CreateIngredientPanelLayout.createSequentialGroup()
                        .addGroup(CreateIngredientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(IngredientsListLabel)
                            .addComponent(IngredientsListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addGroup(CreateIngredientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NewIngredientNameLabel)
                            .addComponent(NewIngredientNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(CreateIngredientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(EditIngredient, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(AddNewIngredientButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)))
                        .addGap(143, 143, 143))))
        );
        CreateIngredientPanelLayout.setVerticalGroup(
            CreateIngredientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateIngredientPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(CreateIngredientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IngredientsListLabel)
                    .addComponent(NewIngredientNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CreateIngredientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(IngredientsListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CreateIngredientPanelLayout.createSequentialGroup()
                        .addComponent(NewIngredientNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AddNewIngredientButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EditIngredient)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DeleteIngredientButton)
                .addContainerGap(191, Short.MAX_VALUE))
        );

        BarTabs.addTab("CreateNewIngredient", CreateIngredientPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BarTabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BarTabs)
        );

        BarTabs.getAccessibleContext().setAccessibleName("DrinksList");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NewDrinkPriceInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewDrinkPriceInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NewDrinkPriceInputActionPerformed

    private void NewDrinkNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewDrinkNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NewDrinkNameInputActionPerformed

    private void CreateIngredientPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CreateIngredientPanelMouseClicked
        
    }//GEN-LAST:event_CreateIngredientPanelMouseClicked

    private void DrinksPanelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DrinksPanelFocusGained
       
    }//GEN-LAST:event_DrinksPanelFocusGained

    private void BarTabsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_BarTabsStateChanged
      if(controller != null){
        updateDrinks();
      updateIngredients();
      }
    }//GEN-LAST:event_BarTabsStateChanged

    private void DrinksListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DrinksListMouseClicked
        //updateDrinkRecipe((String)DrinksList.getSelectedValue());
        //System.out.println("");
        
        
        this.updateDrinkRecipe(this.getValueFromDrinksList());
    }//GEN-LAST:event_DrinksListMouseClicked

    private void AddNewIngredientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddNewIngredientButtonActionPerformed
        if(!NewIngredientNameInput.getText().isEmpty()){
            this.createNewIngredient();
        }
    }//GEN-LAST:event_AddNewIngredientButtonActionPerformed

    private void IngredientsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IngredientsListMouseClicked
        
        
        
    }//GEN-LAST:event_IngredientsListMouseClicked

    private void DeleteIngredientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteIngredientButtonActionPerformed
        if(!this.getSelectedIngredient().isEmpty()){
            this.deleteSelectedIngredient();
        }
    }//GEN-LAST:event_DeleteIngredientButtonActionPerformed

    private void AddToDrinkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddToDrinkButtonActionPerformed
        if(!this.getSelectedAvailableIngredient().isEmpty()){
            this.addPickedIngredient();
        }
    }//GEN-LAST:event_AddToDrinkButtonActionPerformed

    private void CreateDrinkPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CreateDrinkPanelMouseClicked
        this.getPickedIngredients();
    }//GEN-LAST:event_CreateDrinkPanelMouseClicked

    private void CreateNewDrinkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateNewDrinkButtonActionPerformed
        if(this.checkCreationInput()){
            this.createNewDrink();
        }
    }//GEN-LAST:event_CreateNewDrinkButtonActionPerformed

    private void DeleteDrinkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteDrinkButtonActionPerformed
      
           this.deleteDrink(this.getValueFromDrinksList());          
       
    }//GEN-LAST:event_DeleteDrinkButtonActionPerformed

    private void EditIngredientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditIngredientActionPerformed
        if(this.getSelectedIngredient() != null){
        String s = this.getSelectedIngredient();
        String newIngredientName ="";
        newIngredientName = JOptionPane.showInputDialog("Editing" + s);
        
        this.editIngredient(s, newIngredientName);
        }
    }//GEN-LAST:event_EditIngredientActionPerformed

    /**
     * @param args the command line arguments
     */
    public void alustaView(){
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
    }
    
    public void setController(Controller controller){
        this.controller = controller;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddNewIngredientButton;
    private javax.swing.JButton AddToDrinkButton;
    private javax.swing.JScrollPane AvaibleIngredientsListScrollPane;
    private javax.swing.JLabel AvailableIngredientListLabel;
    private javax.swing.JList AvailableIngredientsList;
    private javax.swing.JTabbedPane BarTabs;
    private javax.swing.JPanel CreateDrinkPanel;
    private javax.swing.JPanel CreateIngredientPanel;
    private javax.swing.JButton CreateNewDrinkButton;
    private javax.swing.JButton DeleteDrinkButton;
    private javax.swing.JButton DeleteIngredientButton;
    private javax.swing.JList DrinksList;
    private javax.swing.JLabel DrinksListLabel;
    private javax.swing.JScrollPane DrinksListScrollPane;
    private javax.swing.JPanel DrinksPanel;
    private javax.swing.JButton EditIngredient;
    private javax.swing.JList IngredientsList;
    private javax.swing.JLabel IngredientsListLabel;
    private javax.swing.JScrollPane IngredientsListScrollPane;
    private javax.swing.JTextField NewDrinkNameInput;
    private javax.swing.JLabel NewDrinkNameLabel;
    private javax.swing.JTextField NewDrinkPriceInput;
    private javax.swing.JLabel NewDrinkPriceLabel;
    private javax.swing.JTextField NewIngredientNameInput;
    private javax.swing.JLabel NewIngredientNameLabel;
    private javax.swing.JSlider PartsSlider;
    private javax.swing.JLabel PartsSliderLabel;
    private javax.swing.JLabel PickedIngredientsLabel;
    private javax.swing.JList PickedIngredientsList;
    private javax.swing.JScrollPane PickedIngredientsScrollPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public void setDrinks(List<Drink> list){
        drinksListModel.clear();
        for(Drink d : list){
        drinksListModel.addElement(d.getName()  + "   Price: " + d.getPrice() +   "€");
        }
    }
    
    public void setIngredients(List<Ingredient> list){
        ingredientsListModel.clear();
        for(Ingredient i : list){
            ingredientsListModel.addElement(i.getName());
        }
    }
    
    public void setDrinkRecipe(Set<RecipePart> list){
        if(list != null){
        drinkRecipeListModel.clear();
        for(RecipePart p : list){
            String s = "" + p.getIngredientAmount() + "\tparts of " + p.getIngredient().getName();
            System.out.println(s);
            drinkRecipeListModel.addElement(s);
        }
        }
        else {
            drinkRecipeListModel.clear();
        }
    }
    
    public void updateDrinks(){
        controller.updateDrinkList();
    }
    
    public void updateDrinkRecipe(String drinkName){
        controller.updateDrinkRecipeList(drinkName);
    }
    
    public void updateIngredients(){
        controller.updateIngredientList();
    }
    
    public String getSelectedDrink(){
        return DrinksList.getSelectedValue().toString();
    }
    
   
    
    public String getNewIngredientText(){
        String s = NewIngredientNameInput.getText();
        NewIngredientNameInput.setText("");
        return s;
    }
    
    public String getNewDrinkName(){
        return NewDrinkNameInput.getText();
    }
    
    public double getNewDrinkPrice(){
        String s = NewDrinkPriceInput.getText();
        double d;
        try{
            d = Double.parseDouble(s);
        }
        catch(NumberFormatException e){
            NewDrinkPriceInput.setText("");
            d=0;
        }
        return d;
    }
    
    public void createNewDrink(){
        controller.createNewDrink();
    }
    
    public void createNewIngredient(){
        controller.createNewIngredient();
    }
    
    public int getPartsSliderValue(){
        return PartsSlider.getValue();
    }
    
    public void setPickedIngredient(String s){
        pickedIngredientsListModel.addElement(s);
    }
    
    public void editIngredient(String selected, String newName){
        controller.editIngredient(selected, newName);
    }
   
    public void addPickedIngredient(){
        controller.pickNewIngredient(getPartsSliderValue(), getSelectedAvailableIngredient());
    }
    
    public String getSelectedAvailableIngredient(){
        String selected = (String)AvailableIngredientsList.getSelectedValue();
        return selected;
    }
    
    public String[] getPickedIngredients(){
        Enumeration e = pickedIngredientsListModel.elements();
        ArrayList<String> list = new ArrayList<String>();
        while(e.hasMoreElements()){
            list.add((String)e.nextElement());
        }
        for(String s : list){
            System.out.println(s);
        }
        String[] array = new String[list.size()];
        for(int i = 0; i<array.length; i++){
            array[i] = list.get(i);
        }
        return array;
    }
    
    public String getSelectedIngredient(){
        String selected = (String)IngredientsList.getSelectedValue();
        return selected;
    }
    
    public void deleteSelectedIngredient(){
        controller.deleteIngredient(this.getSelectedIngredient());
    }
    
    public void clearNewDrinkPrice(){
        NewDrinkPriceInput.setText("");
    }
    
    public String getValueFromDrinksList(){
        String s = "";
        if(DrinksList.getSelectedValue() != null){
            s = (String)DrinksList.getSelectedValue();
            
        }
        
        return s;
    }
    
    
    public void deleteDrink(String drinkName){
        controller.deleteDrink(drinkName);
    }
    
    public boolean checkCreationInput(){
        boolean inputOk = false;
        if(!NewDrinkNameInput.getText().isEmpty()){
            if(!NewDrinkPriceInput.getText().isEmpty()){
                if(!pickedIngredientsListModel.isEmpty()){
                    inputOk = true;
                }
            }
        }
        return inputOk;
        
    }
    
   
    
    public void clearCreationScreen(){
        pickedIngredientsListModel.clear();
        NewDrinkNameInput.setText("");
        NewDrinkPriceInput.setText("");
    }
}
